/*
 * Copyright (c) 2012-2014 Alex de Kruijff
 * Copyright (c) 2014-2015 Specialisterren
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Affero General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package org.mazarineblue.runner.swing;

import java.io.ByteArrayOutputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import java.util.Date;
import org.mazarineblue.runner.tasks.Task;

/**
 *
 * @author Alex de Kruijff {@literal <alex.de.kruijff@MazarineBlue.org>}
 */
public class TaskFrame
        extends javax.swing.JFrame {

    private static String toString(Exception ex) {
        OutputStream output = new ByteArrayOutputStream();
        PrintStream stream = new PrintStream(output);
        ex.printStackTrace(stream);
        return output.toString();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel fileLabel;
    private javax.swing.JLabel fileLocation;
    private javax.swing.JLabel scheduledDate;
    private javax.swing.JLabel scheduledLabel;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JLabel sheetLabel;
    private javax.swing.JLabel sheetName;
    private javax.swing.JTextPane textPane;
    // End of variables declaration//GEN-END:variables

    public TaskFrame(Task task, Exception ex) {
        this(task, toString(ex));
    }

    public TaskFrame(Task task, String message) {
        Date scheduled = task.getScheduledDate();
        String title = "Scheduled " + scheduled;
        initComponents();
        this.setTitle(title);
        scheduledDate.setText(scheduled == null ? "now" : scheduled.toString());
        fileLocation.setText(task.getSourceLocation());
        sheetName.setText(task.getSheetName());
        textPane.setText(message);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPane = new javax.swing.JScrollPane();
        textPane = new javax.swing.JTextPane();
        scheduledLabel = new javax.swing.JLabel();
        fileLabel = new javax.swing.JLabel();
        sheetLabel = new javax.swing.JLabel();
        scheduledDate = new javax.swing.JLabel();
        fileLocation = new javax.swing.JLabel();
        sheetName = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        textPane.setEditable(false);
        scrollPane.setViewportView(textPane);

        scheduledLabel.setText("Scheduled");

        fileLabel.setText("File");

        sheetLabel.setText("Scheet");

        scheduledDate.setText("Mon Sep 22 11:55:00 CEST 2014");

        fileLocation.setText("W:\\WebDriver\\alexk\\Mazarine\\Cookbook.xlsx");

        sheetName.setText("Main");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scheduledLabel)
                    .addComponent(fileLabel)
                    .addComponent(sheetLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sheetName)
                    .addComponent(fileLocation)
                    .addComponent(scheduledDate))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(scheduledLabel)
                    .addComponent(scheduledDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileLabel)
                    .addComponent(fileLocation))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sheetLabel)
                    .addComponent(sheetName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
}
